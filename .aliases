# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias cd..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"
alias l="ls -l"
alias ll="ls -alF"

# mv, rm, cp
alias mv='mv -v'
alias rm='rm -i -v'
alias cp='cp -v'

alias chmox='chmod -x'

alias cask='brew cask' # i <3 u cask
alias where=which # sometimes i forget
alias brwe=brew  #typos

alias hosts='sudo $EDITOR /etc/hosts'   # yes I occasionally 127.0.0.1 twitter.com ;)

alias ag='ag -f --hidden'

###
# time to upgrade `ls`

# use coreutils `ls` if possibleâ€¦
hash gls >/dev/null 2>&1 || alias gls="ls"

# always use color, even when piping (to awk,grep,etc)
if gls --color > /dev/null 2>&1; then colorflag="--color"; else colorflag="-G"; fi;
export CLICOLOR_FORCE=1

# ls options: A = include hidden (but not . or ..), F = put `/` after folders, h = byte unit suffixes
alias ls='gls -AFh ${colorflag} --group-directories-first'
alias lsd='ls -l | grep "^d"' # only directories
#    `la` defined in .functions
###


# `cat` with beautiful colors. requires: sudo easy_install -U Pygments
alias c='pygmentize -O style=monokai -f console256 -g'

###
# GIT STUFF

function clone() {
    git clone --depth=1 $1
    cd $(basename ${1%.*})
    yarn install
}
alias push="git push"

# Undo a `git push`
alias undopush="git push -f origin HEAD^:master"

# git root
alias gr='[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`'
alias master="git checkout master"

# Networking. IP address, dig, DNS
alias myip="curl https://ipinfo.io/ip"
# alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
# alias dig="dig +nocmd any +multiline +noall +answer"
# wget sucks with certificates. Let's keep it simple.
alias wget="curl -O"

# Recursively delete `.DS_Store` files
alias cleanup_dsstore="find . -name '*.DS_Store' -type f -ls -delete"

alias diskspace_report="df -P -kHl"
alias free_diskspace_report="diskspace_report"

# Shortcuts
alias g="git"
alias v="vim"
alias ungz="gunzip -k"

# File size
alias fs="stat -f \"%z bytes\""

# Kubernetics
alias k=kubectl
# Empty the Trash on all mounted volumes and the main HDD. then clear the useless sleepimage
alias emptytrash=" \
    sudo rm -rfv /Volumes/*/.Trashes; \
    rm -rfv ~/.Trash/*; \
    sudo rm -v /private/var/vm/sleepimage; \
    rm -rv \"/Users/paulirish/Library/Application Support/stremio/Cache\";  \
    rm -rv \"/Users/paulirish/Library/Application Support/stremio/stremio-cache\" \
"

# Update installed Ruby gems, Homebrew, npm, and their installed packages
alias brew_update="brew -v update; brew upgrade --force-bottle --cleanup; brew cleanup; brew cask cleanup; brew prune; brew doctor; npm-check -g -u"
alias update_brew_npm_gem='brew_update; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update --no-document'

# generate random password
function genpassword() {
    # default length is 8 if not passed as an argument
    LENGTH=${1:=8}
    date +%s | sha256sum | base64 | head -c $LENGTH ; echo
}

# Added on 03-Apr-2017 for managing docker containers
alias dc="docker-compose"

function docker-ip() {
    docker inspect --format '{{ .NetworkSettings.IPAddress }}' "$@"
 }

function docker-ips() {
    docker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq)
 }

function docker-shell() {
    docker exec -it $1 /bin/bash
}

function dc-shell() {
    dc exec $1 /bin/bash
}

function docker-ps() {
   docker ps |awk '{print $1, $2}'
}

function docker-logs {
    docker logs -f --tail 100 $1
}

alias dc-logs="dc logs -f --tail 100"

alias git-tree="git log --graph --decorate --pretty=oneline --abbrev-commit"

alias adb=/Users/jaimonjose/work/Android/adt-bundle-mac/sdk/platform-tools/adb
alias ibrew="arch -x86_64 /usr/local/bin/brew"

function k-pod-logs() {
  kubectl logs --tail=1000 -f -l app=$1 --all-containers=true  --max-log-requests=10
}

function k-pod-restart() {
  kubectl rollout restart deployment/$1
}

function k-pod-update() {
  [[ $1 == 'koopiddlbot-dev' ]] && IMAGE='koopiddlbot' || ( [[ $1 == 'languagedetection' ]] && IMAGE='lingua-rest' ) || IMAGE=$1
  kubectl set image deployments/$1 $1=us-east4-docker.pkg.dev/koopid-prd/dx-docker/$IMAGE:$2
}

function k-pod-scale() {
  kubectl scale --replicas=$2 deployment/$1
}

function k-apply() {
  [[ -z $TAG ]] && echo "Environment variable TAG must be set...." || envsubst < $1 | kubectl apply -f -
}

function k-pod-ls() {
  k get deployment $1 -o wide
  #kubectl get deployment -o go-template --template='{{range .items}}{{range .spec.template.spec.containers}}{{printf "%-20v   %s\n" .name .image}} {{end}}{{end}}'
}
